import Constants = require("../Declarations/Constants");
import Config = require("../Library/Config");
declare class Statsbeat {
    static CONNECTION_STRING: string;
    static STATS_COLLECTION_SHORT_INTERVAL: number;
    static STATS_COLLECTION_LONG_INTERVAL: number;
    private static TAG;
    private _networkStatsbeatCollection;
    private _sender;
    private _handle;
    private _longHandle;
    private _isEnabled;
    private _isInitialized;
    private _config;
    private _statsbeatConfig;
    private _isVM;
    private _statbeatMetrics;
    private _resourceProvider;
    private _resourceIdentifier;
    private _sdkVersion;
    private _runtimeVersion;
    private _os;
    private _language;
    private _cikey;
    private _attach;
    private _feature;
    private _instrumentation;
    constructor(config: Config);
    enable(isEnabled: boolean): void;
    isInitialized(): boolean;
    isEnabled(): boolean;
    setCodelessAttach(): void;
    addFeature(feature: Constants.StatsbeatFeature): void;
    removeFeature(feature: Constants.StatsbeatFeature): void;
    addInstrumentation(instrumentation: Constants.StatsbeatInstrumentation): void;
    removeInstrumentation(instrumentation: Constants.StatsbeatInstrumentation): void;
    countRequest(category: number, endpoint: string, duration: number, success: boolean): void;
    countException(category: number, endpoint: string): void;
    countThrottle(category: number, endpoint: string): void;
    countRetry(category: number, endpoint: string): void;
    trackShortIntervalStatsbeats(): Promise<void>;
    trackLongIntervalStatsbeats(): Promise<void>;
    private _getNetworkStatsbeatCounter;
    private _trackRequestDuration;
    private _trackRequestsCount;
    private _sendStatsbeats;
    private _getCustomProperties;
    private _getResourceProvider;
}
export = Statsbeat;
